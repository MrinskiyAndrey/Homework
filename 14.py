"""Задание 14:
Написать функцию, которая будет принимать одно значение - строку или список.
Необходимо зашифровать строку. Первый элемент строки - код буквы в ascii (например 'a' = 97, a 'A' = 65).
Следующий элемент - закодированная с помощью таблицы разница между текущим и предыдущим символом, итд.
Если подается список - необходимо расшифровать его.
Алгоритм такой же - первое число перекодируется в соответствием с таблицей ascii,
второй символ - сумма первого и второго числа перекодированная с помощью таблицы ascii.

test_function("Hello") ➞ [72, 29, 7, 0, 3]

test_function([ 72, 33, -73, 84, -12, -3, 13, -13, -68 ]) ➞ "Hi there!" """


#Выполнение задания:

#Выбор ввода и сам ввод, входящих данных:
choise = ''
while choise != '1' or '2':
    choise = input('Если хотите зашифровать текст - введите 1\nЕсли хотите расшифровать код - введите 2\n')
    if choise == "1":
        text = input('Введите текст\n')
        break
    elif choise == "2":
        text = list(map(int,input('Введите кодировку через пробел \n').split()))
        break
    else:
        print("Некорректный ввод, повторите попытку")


#Функция шифровки и дешифровки:
def coder(txt):
    
    code_list = [ ]         #объявление кодированого списка
    decode_string = ""     #объявление декодированной строки
    i=0                     #счетчик цикла
   #шифрование текста: 
    if type (txt) == str:
        code_list.append(ord(txt[0]))   #добавление ascii кода, первого символа строки
        while i < (len(txt)-1):
            code_tmp_1 = (ord(txt[i+1]) - ord(txt[i])) #шифрование согласно заданию
            code_list.append(code_tmp_1) #добавление шифрованого кода
            i+=1
        return code_list
    #дешифровка кода
    elif type (txt) == list:
            code_tmp_1 = txt[i]
            decode_string = decode_string+chr(code_tmp_1)        #добавление первого символа                   
            while i < (len(txt)-1):
                code_tmp_1 = code_tmp_1 + txt[i+1]                 #дешифровка согласно заданию
                decode_string = decode_string + chr(code_tmp_1)  #добавление дешифрованого символа
                i+=1
            return decode_string

    
print(coder(text))
